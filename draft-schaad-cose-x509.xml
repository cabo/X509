<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
  <!ENTITY RFC2104 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2104.xml" >
  <!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml" >

  <!ENTITY RFC2582 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2582.xml" >
  <!ENTITY RFC2585 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2585.xml" >
  <!ENTITY RFC2633 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2633.xml" >
  <!ENTITY RFC2898 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2898.xml" >
  <!ENTITY RFC3394 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3394.xml" >
  <!ENTITY RFC3447 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3447.xml" >
  <!ENTITY RFC3610 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3610.xml" >
  <!ENTITY RFC4231 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4231.xml" >
  <!ENTITY RFC4262 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4262.xml" >
  <!ENTITY RFC5246 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml" >
  <!ENTITY RFC5280 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5280.xml" >
  <!ENTITY RFC5480 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5480.xml" >
  <!ENTITY RFC5652 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5652.xml" >
  <!ENTITY RFC5751 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5751.xml" >
  <!ENTITY RFC5752 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5752.xml" >
  <!ENTITY RFC5869 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5869.xml" >
  <!ENTITY RFC5990 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5990.xml" >
  <!ENTITY RFC6090 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6090.xml" >
  <!ENTITY RFC6151 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6151.xml" >
  <!ENTITY RFC6979 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6979.xml" >
  <!ENTITY RFC7049 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7049.xml" >
  <!ENTITY RFC7159 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7159.xml" >
  <!ENTITY RFC7252 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7252.xml" >
  <!ENTITY RFC7515 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7515.xml" >
  <!ENTITY RFC7516 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7516.xml" >
  <!ENTITY RFC7517 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7517.xml" >
  <!ENTITY RFC7518 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7518.xml" >
  <!ENTITY RFC7539 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7539.xml" >

  <!ENTITY CDDL SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.greevenbosch-appsawg-cbor-cddl.xml" >
  <!ENTITY COSE SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-cose-msg.xml" >
  <!ENTITY CBCMAC SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.mcgrew-aead-aes-cbc-hmac-sha2.xml" >
  <!ENTITY LAMPS SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-lamps-rfc5751-bis.xml" >

]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-schaad-cose-x509-latest" category="info">
  <front>
    <title abbrev="COSE X.509">CBOR Object Signing and Encryption (COSE): Headers for carrying and referencing X.509 certificates</title>

    <author initials="J." surname="Schaad" fullname="Jim Schaad">
      <organization>August Cellars</organization>
      <address>
        <email>ietf@augustcellars.com</email>
      </address>
    </author>

    <date/>

    <area>Security</area>
    <abstract>
      <t>
        This document defines the headers and usage for  referring to and transporting X.509 certificates  in the CBOR Encoded Message (COSE) Syntax.
      </t>
    </abstract>

    <note title="Contributing to this document">
      <!-- RFC EDITOR - Please remove this note before publishing -->
      <t>
        The source for this draft is being maintained in GitHub.
        Suggested changes should be submitted as pull requests  at <eref target="https://github.com/cose-wg/X509"/>.
        Instructions are on that page as well.
        Editorial changes can be managed in GitHub, but any substantial issues need to be discussed on the COSE mailing list.
      </t>
    </note>
  </front>

  <middle>

    <section anchor="introduction" title="Introduction">
      <t>
        In the process of writing RFCXXXX <xref target="I-D.ietf-cose-msg"/> discussions where held on the question of X.509 certificates  <xref target="RFC5280"/>  and if there were needed.
        At the time there were no use cases presented that appeared to have a sufficient set of support to include these headers.
        Since that time a number of cases where X.509 certificate support is necessary have been defined.
        This document provides a set of headers that will allow applications to transport and refer to X.509 certificates in a consistent manner.
      </t>

      <t>
	Some of the constrainted device situations are being used where an X.509 PKI is already installed.
	One of these situations is the 6tish environment for enrollment of devices where the certificates are installed at the factory.
	The <xref target="EDHOC"/> draft was also written with the idea that long term certificates would be used to provide for authentication of devices and uses them to establish session keys.
	A final scenario is the use of COSE as a messaging application w/ longer term live spans.
	The use of certificates in this scenario allows for key managment to be used which is well understood.
      </t>
      
      <section anchor="requirements-terminology" title="Requirements Terminology">
        <!--  NOTE FOR AUTHORS:
             We use the following terms in the document
             
             field - an entry in a CBOR array
             parameter - an element in a CBOR map (as oppose to 'member' which is frequently used in JSON
             label - the key of an element in a CBOR map.   Unless otherwise separated from text, enclose with single quote marks
             value - the value of an element in a CBOR map
        -->

        <t>
          The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in <xref target="RFC2119"/>.
        </t>

        <t>
          When the words appear in lower case, their natural language meaning is used.
        </t>

      </section>

    </section>

    <section title="X.509 COSE Headers">
      <t>
        The use of X.509 certificates allows for an existing trust infrastructure to be used with COSE.
	This includes the full suite of enrollment protocols, trust anchors, trust chaining and revocation checking that have been defined over time by the IETF and other organizations.
	The key structures that have been defined in COSE currently do not support all of these properties although some may be found in COSE Web Tokens (CWT) <xref target="CWT"/>.
      </t>

      <t>
	It is not necessarily expected that constrainted devices will fully support the evalaluation and processing of X.509 certificates, it is perfectly reasonable for a certificate to be assigned to a device which it can then provide to a relying party along with a signature or encrypted message, the relying party not being a constrained device.
      </t>

      <t>
        Certificates obtained from any of these methods MUST still be validated according to the PKIX rules in <xref target="RFC5280"/>.
        This includes matching against the trust anchors configured for the application.
        These rules apply to certificates of a chain length of one as well as longer chains.
      </t>

      <t>
        The header parameters defined in this document are:

        <list style="hanging">
	  <t hangText="x5b:">
	    This header parameters contains a bag of X.509 certificates.
	    The set of certificates in this header are unordered, may contain self-signed certificates,  can contain certificates which are completely extranious to the message.
	    (An example of this would be to carry a certificate with a key agreement key usage in a signed message.)
	    As the certificates are unordered, the party evaluating the signature will need to do the necessary path building.
	    Certificates needed for any particular chain to be built may be absent from the bag.
	    <vspace lines="1"/>
	    As this header element does not provide any trust, the header parameter can be in either a protected or unprotected header bag.
	    <vspace lines="1"/>
            This header parameter allows for a single or a bag of X.509 certificates to be carried in the message.
            <list style="symbols">
              <t>
                If a single certificate is conveyed, it is placed in a CBOR bstr.
              </t>
              <t>
                If multiple certificates are conveyed, a CBOR array of bstrs is used.
		Each certificate being in it's own slot.
              </t>
            </list>
	  </t>
	  
          <t hangText="x5c:">
	    This header parameter contains an ordered array of X.509 certificates.
	    The certificates are to be ordered starting with the certificate contianing the end-entity key followed by the certificate which signed it and so on.
	    There is no requirement for the entire chain to be present in the element if there is reason to believe that the relying party will already have it.
	    <vspace lines="1"/>
	    As this header element does not provide any trust, the header parameter can be in either a protected or unprotected header bag.
	    <vspace lines="1"/>
            This header parameter allows for a single or a bag of X.509 certificates to be carried in the message.
            <list style="symbols">
              <t>
                If a single certificate is conveyed, it is placed in a CBOR bstr.
              </t>
              <t>
                If multiple certificates are conveyed, a CBOR array of bstrs is used.
		Each certificate being in it's own slot.
              </t>
            </list>
          </t>

          <t hangText="x5t:">
            This header parameter provides the ability to identify an X.509 certificate by a hash value.
            The parameter is an array of two elements.
            The first element is an algorithm identifier which is a signed integer or a string containing the hash algorithm identifier.
            The second element is a binary string containing the hash value.
	    <vspace lines="1"/>
	    As this header element does not provide any trust, the header parameter can be in either a protected or unprotected header bag.
            <vspace/>
            For interoperability, applications which use this header parameter MUST support the hash algorithm 'sha256', but can use other hash algorithms.
          </t>

          <t hangText="x5u:">
            This header parameter provides the ability to identify an X.509 certificate by a URL.
            The referenced resource can be any of the following media types:
            <list style="symbols">
              <t>application/pkix-cert <xref target="RFC2585"/></t>
              <t>application/pkcs7-mime; smime-type="certs-only" <xref target="I-D.ietf-lamps-rfc5751-bis"/></t>
              <t>Should we support a PEM type? I cannot find a registered media type for one</t>
            </list>
	    <vspace lines="1"/>
	    As this header element implies a trust relationship, the header parameter MUST be in the protected header bag.
            <vspace/>
            The URL provided MUST provide integrity protection.
            For example, an HTTP or CoAP GET request to retrieve a certificate MUST use TLS <xref target="RFC5246"/> or DTLS.
            If the certificate does not chain to an existing trust anchor, the identity of the server MUST be configured as trusted to provide new trust anchors.
            This will normally be the situation when self-signed certificates are used.
          </t>
        </list>
      </t>

      <t>
	The header paramters used in the following locations:
	<list style="symbols">
	  <t>
	    COSE_Signature and COSE_Sign0 objects, in these objects they identify the key that was used for generating signature.
	  </t>

	  <t>
            COSE_recipient object, in this object they identify the key  used by the sender for static-static key agreement algorithms.
	    They would be used in place either XXXX or YYYY.
	  </t>
	</list>
      </t>

      <texttable anchor="Tags" title="X.509 COSE Headers">
        <ttcol>name</ttcol><ttcol>label</ttcol><ttcol>value type</ttcol><ttcol>description</ttcol>

        <c>x5b</c><c>TBD4</c><c>COSE_X509</c><c>Collection of X.509 certificates</c>
        <c>x5c</c><c>TBD3</c><c>COSE_X509</c><c>Collection of X.509 certificates</c>
        <c>x5t</c><c>TBD1</c><c>COSE_CertHash</c><c>Hash of an X.509 certificate</c>
        <c>x5u</c><c>TBD2</c><c>uri</c><c>URL pointing to an X.509 certificate</c>
      </texttable>

      <figure><artwork type="CDDL">
COSE_X509 = bstr / [ *certs: bstr ]
COSE_CertHash = [ hashAlg: (int / tstr), hashValue: bstr ]
</artwork>
      </figure>
    </section>

    <section title="Hash Algorithm Identifiers">
      <t>
	The core COSE document did have a need for a standalone hash algorithm, and thus did not define any.
	In this document, two hash algorithms are defined for use with the 'x5t' header parameter.
      </t>
      
      <section title="SHA-2 256-bit Hash">
        <t>
          Define an algorithm identifier for SHA-256.
        </t>
      </section>

      <section title="SHA-2 256-bit Hash trucated to 64 bits">
	<t>
	  This hash function uses the SHA-2 256-bit hash function as in the previous section, however it truncates the result to 64-bits for transmission.
	  The fact that it is a trucated hash means that there is now a high likelyhood that colisions will occur, thus this hash function cannot be used in situations where a unique items is required to be identified.
	  Luckly for the case of identifying a certificate that is not a requirement, the only requirement is that the number of potential certificates (and thus keys) to be tried is reduced to a small number.
	  (Hopefully that number is one, but it can not be assumed to be.)
	  After the set of certificates has been filtered down, the public key in each certificate will need to be tried for the operation in question.
	  The certificate can be validated either before or after it has been checked as working.
	  The trade-offs involved are:
	  <list style="symbols">
	    <t>Certificate validation before using the key will imply that more network traffic may be required in order to fetch certificates and do revocation checking.</t>
	    <t>
	      Certificate validation after using the key means that bad keys can be used and, if not carefully checked, the result may be used prior to completing the certificate validation.
	      Using unvalidated keys can expose the device to more timing and oracle attacks as the attacker would be able to see if the key operation succeeded or failed as no network traffic to validate the certificate would ensue.
	    </t>
	  </list>
	</t>
    </section>
    
    <section anchor="iana-considerations" title="IANA Considerations">

      
      <section anchor="cose-header-key-table" title="COSE Header Parameter Registry">

        <t>
          Put in the registrations.
        </t>

      </section>

      
      <section anchor="cose-algorithm-registry" title="COSE Algorithm Registry">

        <t>
          Put in the registrations.
        </t>
        
      </section>

    </section>
    
    <section anchor="security-considerations" title="Security Considerations">

      <t>
        There are security considerations:
      </t>


    </section>

  </middle>

  <back>

    <references title='Normative References'>
      &RFC2119;
      &RFC5280;
      &RFC7049;
      &COSE;
    </references>

    <references title='Informative References'>
      &CDDL;
      &RFC5246;
      &LAMPS;
      &RFC2585;

    </references>

  </back>
</rfc>
